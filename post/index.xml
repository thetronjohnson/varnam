<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Varnam</title><link>/post/</link><description>Recent content in Posts on Varnam</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Sun, 28 Sep 2014 00:00:00 +0000</lastBuildDate><atom:link href="/post/index.xml" rel="self" type="application/rss+xml"/><item><title>Cross Platform Transliterator</title><link>/post/creating-a-new-theme/</link><pubDate>Sun, 28 Sep 2014 00:00:00 +0000</pubDate><guid>/post/creating-a-new-theme/</guid><description>Open Source Varnam is a Cross Platform Predictive Transliterator for Indian Languages
Here&amp;rsquo;s an example:
## this is a comment $ echo this is a command this is a command ## edit the file $ vi foo.md +++ date = &amp;#34;2014-09-28&amp;#34; title = &amp;#34;creating a new theme&amp;#34; +++ bah and humbug :wq ## show it $ cat foo.md +++ date = &amp;#34;2014-09-28&amp;#34; title = &amp;#34;creating a new theme&amp;#34; +++ bah and humbug $ Some Definitions There are a few concepts that you need to understand before creating a theme.</description></item><item><title>Personalized for you, by you</title><link>/post/goisforlovers/</link><pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate><guid>/post/goisforlovers/</guid><description>Varnam remembers your corrections and maintains a custom dictionary for new or uncommon words and names.
This document is a brief primer on using Go templates. The Go docs provide more details.
Introduction to Go Templates Go templates provide an extremely simple template language. It adheres to the belief that only the most basic of logic belongs in the template or view layer. One consequence of this simplicity is that Go templates parse very quickly.</description></item><item><title>Type the way you want</title><link>/post/hugoisforlovers/</link><pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate><guid>/post/hugoisforlovers/</guid><description>Get your message across in the language and style you want. Switching among over many Indian languages and input methods is as seamless as typing.
Save it somewhere specific as we will be using it in the next step.
More complete instructions are available at Install Hugo
Step 2. Build the Docs Hugo has its own example site which happens to also be the documentation site you are reading right now.</description></item><item><title>Migrate to Hugo from Jekyll</title><link>/post/migrate-from-jekyll/</link><pubDate>Mon, 10 Mar 2014 00:00:00 +0000</pubDate><guid>/post/migrate-from-jekyll/</guid><description>Move static content to static Jekyll has a rule that any directory not starting with _ will be copied as-is to the _site output. Hugo keeps all static content under static. You should therefore move it all there. With Jekyll, something that looked like
▾ &amp;lt;root&amp;gt;/ ▾ images/ logo.png should become
▾ &amp;lt;root&amp;gt;/ ▾ static/ ▾ images/ logo.png Additionally, you&amp;rsquo;ll want any files that should reside at the root (such as CNAME) to be moved to static.</description></item></channel></rss>