<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>golang on Varnam</title><link>/tags/golang/</link><description>Recent content in golang on Varnam</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Wed, 02 Apr 2014 00:00:00 +0000</lastBuildDate><atom:link href="/tags/golang/index.xml" rel="self" type="application/rss+xml"/><item><title>Personalized for you, by you</title><link>/post/goisforlovers/</link><pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate><guid>/post/goisforlovers/</guid><description>Varnam remembers your corrections and maintains a custom dictionary for new or uncommon words and names.
This document is a brief primer on using Go templates. The Go docs provide more details.
Introduction to Go Templates Go templates provide an extremely simple template language. It adheres to the belief that only the most basic of logic belongs in the template or view layer. One consequence of this simplicity is that Go templates parse very quickly.</description></item><item><title>Type the way you want</title><link>/post/hugoisforlovers/</link><pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate><guid>/post/hugoisforlovers/</guid><description>Get your message across in the language and style you want. Switching among over many Indian languages and input methods is as seamless as typing.
Save it somewhere specific as we will be using it in the next step.
More complete instructions are available at Install Hugo
Step 2. Build the Docs Hugo has its own example site which happens to also be the documentation site you are reading right now.</description></item></channel></rss>